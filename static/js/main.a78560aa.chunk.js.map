{"version":3,"sources":["components/Posts/Posts.js","Shapes.js","components/Pagination/Pagination.js","App.js","index.js"],"names":["Posts","PropTypes","shape","userId","number","isRequired","id","title","string","body","posts","loading","className","map","post","key","Pagination","length","perPage","onPageChange","handleNext","handlePrevious","currentPage","withInfo","onPerPage","pages","numberOfPages","Math","ceil","i","push","aria-label","value","onChange","type","onClick","page","App","useState","setLoading","setPosts","setCurrentPage","setPerPage","lastPostIndex","firstPostIndex","currentPosts","slice","useEffect","a","fetch","then","response","json","data","getData","event","target","ReactDOM","render","document","getElementById"],"mappings":"2RAMaA,GCJYC,IAAUC,MAAM,CACvCC,OAAQF,IAAUG,OAAOC,WACzBC,GAAIL,IAAUG,OAAOC,WACrBE,MAAON,IAAUO,OAAOH,WACxBI,KAAMR,IAAUO,OAAOH,aDAJ,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAH,SAAUC,QAYzB,0CATF,wBAAIC,UAAU,cACXF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBAAIF,UAAU,kBAAkBG,IAAKD,EAAKR,IACvCQ,EAAKR,GADR,SAGGQ,EAAKL,YEVHO,G,MAAa,SAAC,GAazB,IAJI,IARFC,EAQC,EARDA,OACAC,EAOC,EAPDA,QACAC,EAMC,EANDA,aACAC,EAKC,EALDA,WACAC,EAIC,EAJDA,eACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,SACAC,EACC,EADDA,UAEIC,EAAQ,GACRC,EAAgBC,KAAKC,KAAKX,EAASC,GAEhCW,EAAI,EAAGA,GAAKH,EAAeG,GAAK,EACvCJ,EAAMK,KAAKD,GAGb,OACE,yBAAKE,aAAW,2BACd,yBAAKnB,UAAU,eACb,4BACEoB,MAAOd,EACPe,SAAUT,EACVZ,UAAU,SACVN,GAAG,qBACHyB,aAAW,oCAEX,4BAAQC,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGJ,4BAAKT,KACL,wBAAIX,UAAU,cACZ,wBACEA,UAA4B,IAAhBU,EAAqB,qBAAuB,aAExD,4BACEY,KAAK,SACLtB,UAAU,YACVuB,QAASd,GAHX,aASDI,EAAMZ,KAAI,SAAAuB,GAAI,OACb,wBACExB,UACGwB,IAASd,EAAe,mBAAqB,YAEhDP,IAAKqB,GAEL,4BACEF,KAAK,SACLtB,UAAU,YACVuB,QAAS,kBAAMhB,EAAaiB,KAE3BA,OAIP,wBACExB,UACGU,IAAgBI,EAAiB,qBAAuB,aAG3D,4BACEQ,KAAK,SACLtB,UAAU,YACVuB,QAASf,GAHX,aCPKiB,EA5DH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACT3B,EADS,KACA4B,EADA,OAEUD,mBAAS,IAFnB,mBAET5B,EAFS,KAEF8B,EAFE,OAGsBF,mBAAS,GAH/B,mBAGThB,EAHS,KAGImB,EAHJ,OAIcH,mBAAS,IAJvB,mBAITpB,EAJS,KAIAwB,EAJA,KAMVC,EAAgBrB,EAAcJ,EAC9B0B,EAAiBD,EAAgBzB,EACjC2B,EAAenC,EAAMoC,MAAMF,EAAgBD,GAMjDI,qBAAU,WACRR,GAAW,GACE,uCAAG,sBAAAS,EAAA,sEACRC,MAAM,8CACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIb,EAASa,MAHX,2CAAH,oDAMbC,GACAf,GAAW,KACV,IAmBH,OACE,oCACE,kBAAC,EAAD,CAAO7B,MAAOmC,EAAclC,QAASA,IACrC,kBAAC,EAAD,CACEa,UATY,SAAC+B,GACjBb,GAAYa,EAAMC,OAAOxB,OACzBS,EAAe,IAQXxB,OAAQP,EAAMO,OACdC,QAASA,EACTC,aAxBe,SAACiB,GACpBK,EAAeL,IAwBXf,eAjBiB,WACrBoB,EAAenB,EAAc,IAiBzBF,WAtBa,WACjBqB,EAAenB,EAAc,IAsBzBA,YAAaA,EACbC,SA5CW,2BACZqB,EAAiB,EADL,cACYD,EADZ,eACgCjC,EAAMO,aCZzDwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a78560aa.chunk.js","sourcesContent":["\nimport React from 'react';\nimport './Posts.css';\nimport PropTypes from 'prop-types';\nimport { PostShape } from '../../Shapes';\n\nexport const Posts = ({ posts, loading }) => (\n\n  !loading ? (\n    <ul className=\"list-group\">\n      {posts.map(post => (\n        <li className=\"list-group-item\" key={post.id}>\n          {post.id}\n          . &nbsp;\n          {post.body}\n        </li>\n      ))}\n    </ul>\n  ) : <h1>Loading...</h1>\n);\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(PostShape).isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const PostShape = PropTypes.shape({\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport './Pagination.css';\nimport PropTypes, { number } from 'prop-types';\n\nexport const Pagination = (\n  { length,\n    perPage,\n    onPageChange,\n    handleNext,\n    handlePrevious,\n    currentPage,\n    withInfo,\n    onPerPage },\n) => {\n  const pages = [];\n  const numberOfPages = Math.ceil(length / perPage);\n\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <div className=\"input-group\">\n        <select\n          value={perPage}\n          onChange={onPerPage}\n          className=\"select\"\n          id=\"inputGroupSelect04\"\n          aria-label=\"Example select with button addon\"\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n      <h2>{withInfo()}</h2>\n      <ul className=\"pagination\">\n        <li\n          className={(currentPage === 1) ? 'page-item disabled' : 'page-item'}\n        >\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            onClick={handlePrevious}\n          >\n            Previous\n          </button>\n        </li>\n\n        {pages.map(page => (\n          <li\n            className={\n              (page === currentPage) ? 'page-item active' : 'page-item'\n            }\n            key={page}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n        <li\n          className={\n            (currentPage === numberOfPages) ? 'page-item disabled' : 'page-item'\n          }\n        >\n          <button\n            type=\"button\"\n            className=\"page-link\"\n            onClick={handleNext}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  length: number.isRequired,\n  perPage: number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handlePrevious: PropTypes.func.isRequired,\n  currentPage: number.isRequired,\n  withInfo: PropTypes.func.isRequired,\n  onPerPage: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Posts } from './components/Posts/Posts';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n\n  const lastPostIndex = currentPage * perPage;\n  const firstPostIndex = lastPostIndex - perPage;\n  const currentPosts = posts.slice(firstPostIndex, lastPostIndex);\n\n  const withInfo = () => (\n    `${firstPostIndex + 1} - ${lastPostIndex} of ${posts.length}`\n  );\n\n  useEffect(() => {\n    setLoading(true);\n    const getData = async() => {\n      await fetch('https://jsonplaceholder.typicode.com/posts')\n        .then(response => response.json())\n        .then(data => setPosts(data));\n    };\n\n    getData();\n    setLoading(false);\n  }, []);\n\n  const onPageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleNext = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const handlePrevious = () => {\n    setCurrentPage(currentPage - 1);\n  };\n\n  const onPerPage = (event) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        onPerPage={onPerPage}\n        length={posts.length}\n        perPage={perPage}\n        onPageChange={onPageChange}\n        handlePrevious={handlePrevious}\n        handleNext={handleNext}\n        currentPage={currentPage}\n        withInfo={withInfo}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}